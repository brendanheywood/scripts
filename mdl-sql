#!/usr/bin/perl

# This reaches into config.php and grabs the DB details and makes it super easy to
# make and restore backups and login to the DB without typing a bunch of shit

if (!-e 'config.php'){
	die "Can't find a config.php";
}

open CONF, 'config.php';

my %db = ();

foreach $line (<CONF>){
	if($line =~ /(^\$CFG->db(.*?)\s.*= '(.*?)')/){
		$key = $2;
		$val = $3;
		$db{$key} = $val;
		print "Line: Key '$key' Val '$val' \n";
	}
    if ($line =~ /('(dbport)' => (\d*),)/) {
		$key = $2;
		$val = $3;
		$db{$key} = $val;
		print "Line: Key '$key' Val '$val' \n";
    }
}
close CONF;

print "Login:\n";
if($db{type} eq 'mysql' or $db{type} eq 'mysqli'){
    $command = "mysql -u $db{user} --password='$db{pass}' $db{name}";

} elsif($db{type} eq 'mssql'){
    # sqsh shell is preferable but couldn't get it to work :(
    # $command = "sqsh -S$db{host}:$db{dbport} -D$db{name} -U$db{user} -P$db{pass}";
    $command = "tsql -H $db{host} -p $db{dbport} -D $db{name} -U $db{user} -P $db{pass}";
    # With tsql enter commands without a ; and on the next line type 'go' to run it

} elsif ($db{type} eq 'postgres7' || $db{type} eq 'pgsql'){
    $command = ""
            . "export PAGER=\"table-pager\";\n"
            . "export PGPASSWORD=\"$db{pass}\";\n"
            . "export PSQL_EDITOR='vim +1 +\"set syntax=sql\"';\n"
            # +1 forces cursor onto line 1
            # set the sytax to sql as we don't have a good file extension
            . "export PGPASSWORD=\"$db{pass}\";\n"
#		    . "sudo -u postgres psql -h $db{host} $db{name} $db{user}";
		# TODO "psql -h $db{host} $db{name} $db{user} --port=6432";  -- need to auto detect port as well
		    ."psql -h $db{host} $db{name} $db{user}";
}
# print "Command: $command\n";
if(system ($command) != 0){
    print "$command";
    print "\n-----------------------------------------\n";
    print "DOH! It looks like your DB doesn't exist! Want to create it?:\n";
    if ($db{type} eq 'postgres7' || $db{type} eq 'pgsql'){
        print "sudo -u postgres createuser -SDRP $db{user}\n";
        print "\n";
        print "enter password and then run:\n";
        print "sudo -u postgres createdb -O $db{user} -E UTF8 $db{name}\n";
        print "\n";
    }
}

