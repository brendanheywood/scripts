#!/usr/bin/perl

#
# This is sorta like a moodle aware, git blame on roids
# It generates a summary of how a moodle has diverged from core
# and who did it, and under what WR's (if the git comments are mostly sane)
#


use strict;

my $version;

if (-e 'version.php'){

    $version = `git log --oneline  version.php | head -n 1`;
    chomp $version;
    $version =~ /(\S+)$/;
    $version = "v$1";

    my $verify = `git tag --list | grep '$version'`;
    chomp $verify;
    if ($version ne $verify){
        print "Can't find a tag ($version isn't a tag)\n";
        exit;
    }
}


print "Auto detected upstream moodle version '$version'\n";

# run this:
my @diff = `git diff $version --name-status`;

# Remove some whitelist of always present Catalyst stuff
my @diff = grep ! /debian/, @diff;
my @diff = grep ! /Makefile/, @diff;
my @diff = grep ! /dhmm_version/, @diff;

# Find all paths with a version, poor mans auto detect of sub systems
my @plugins = grep /\/version.php/, @diff;


for (@plugins){
    s/.\s+(.*)version.php/$1/g;
}

#print @plugins;


my $c = 0;

sub uniq {
    local %_;
    grep {!$_{$_}++} @_;
}

sub details {

    my ($version, $files) = @_;

    #my @commits = `git log --oneline   $version..HEAD  $plugin`;
    my @commits = `git log --pretty=format:"%an:SEP:%s"  $version..HEAD  $files`;

    # Remove commits which are from moodle tracker
    @commits = grep ! /MDL-/, @commits;

    # Remove commits which are just an upstream merge
    @commits = grep ! /Merge.*MOODLE_/, @commits;

#    print @commits;

    my @wrs = grep /WR#\d+/, @commits;
    for (@wrs){
        s/^.*WR#?(\d+).*$/$1/g;
        chomp;
    }
    @wrs = uniq @wrs; 

    my $wrs = join ',', @wrs;

    my @who = @commits;
    for (@who){
        s/^(.*):SEP.*$/$1/g;
        chomp;
    }
    @who = uniq @who;

    my $who = join ',', @who;

    return $who, $wrs;

}


# show all plugins, which are pure A adds
if (@plugins){
    print '-' x 100;
    print "\nNew plugins added to this moodle:          File changes          WR's                 Who\n";
    foreach my $plugin (@plugins){

#    if ($c++ > 3){ last; }

        chomp $plugin;

        # Remove plugin related files from the diff
        my @add = grep /A\s+$plugin/, @diff;
        @diff = grep ! /A\s+$plugin/, @diff;
        my $add = $#add>=0 ? "A ".($#add+1): '';

        my @del = grep /D\s+$plugin/, @diff;
        @diff = grep ! /D\s+$plugin/, @diff;
        my $del = $#del>=0 ? "D ".($#del+1): '';

        my @mod = grep /M\s+$plugin/, @diff;
        @diff = grep ! /M\s+$plugin/, @diff;
        my $mod = $#mod>=0 ? "M ".($#mod+1) : '';

        my ($who, $wrs) = details($version, $plugin);

        printf "A %-40s %-6s %-6s %-6s  %-20s %s\n", $plugin, $add, $mod, $del, $wrs, $who;
    }

}

#exit;

my @added = grep /A\s/, @diff;
my @diff = grep ! /A\s/, @diff;


if (@added){
    print '-' x 80;
    print "\nThese are other new files added to moodle: (probably missing a proper version.php file)\n";
    foreach my $line ( @added ){

        $line =~ /.\s+(\S.*)$/;
        chomp $line;
        my $file = $1;
        my ($who, $wrs) = details($version, $file);
        printf "%-58s %-20s %s \n", $line, $wrs, $who;
    }


}
if (@diff){
    print '-' x 80;
    print "\nWARNING: These are changes to core moodle\n";
    foreach my $line ( @diff ){

        $line =~ /.\s+(\S.*)$/;
        chomp $line;
        my $file = $1;
        my ($who, $wrs) = details($version, $file);

        printf "%-58s %-20s %s \n", $line, $wrs, $who;
    }}


# find anything which is M and highlight it

print "\nTo drill in further:\n\$ git diff $version --name-status [path]\n";



